#include <bits/stdc++.h>
#include<vector>
#include<algorithm>
using namespace std;

int factors(int n)
{
    if(n>3){
	    for (int i = 2; i <= sqrt(n); i++){
	        if(n % (i*i) == 0){
	            return 1;
	        }
	    }
    }
	return 0;
}

void subsetsUtil(vector<int>& A, vector<int>& subset, int index, vector<int>& result)
{
    int temp=1;
    for(int j=0;j<subset.size();j++){
        temp*=subset[j];
    }
    result.push_back(temp);
    for (int i = index; i < A.size(); i++) {
        subset.push_back(A[i]);
        subsetsUtil(A, subset, i + 1, result);
        subset.pop_back();
    }
    return;
}
int subsets(vector<int>& A)
{
    vector<int> subset;
    vector<int> result;
    int index = 0;
    subsetsUtil(A, subset, index, result);
    int count=0;
    for(int i=0;i<result.size();i++){
        if(factors(result[i])==0) count++;
    }
    return count-1;
}

int main(){
    vector<int> arr={2,6,12};
    for(int i=0;i<arr.size();i++){
        if(factors(arr[i])==1){
            arr.erase(remove(arr.begin(), arr.end(), arr[i]), arr.end());
        }
    }
    cout<<subsets(arr);
    return 0;
}
